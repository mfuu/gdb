---
import dayjs from 'dayjs';
import utc from 'dayjs/plugin/utc';
import timezone from 'dayjs/plugin/timezone';
import IconCalendar from '@/assets/icons/IconCalendar.svg';
import config from '@/config';

dayjs.extend(utc);
dayjs.extend(timezone);

export interface Props {
  class?: string;
  size?: 'sm' | 'lg';
  pubDatetime: string | Date;
  modDatetime: string | Date | undefined;
}

const {
  pubDatetime,
  modDatetime,
  size = 'sm',
  class: className = '',
} = Astro.props;

/* ========== Formatted Datetime ========== */
const isModified = modDatetime && modDatetime > pubDatetime;

const datetime = dayjs(isModified ? modDatetime : pubDatetime).tz(config.timezone);

const date = datetime.format('YYYY/MM/DD');
---

<div class:list={['flex items-center gap-x-2 opacity-80', className]}>
  <IconCalendar
    class:list={['inline-block size-5 min-w-[1.25rem]', { 'scale-90': size === 'sm' }]}
  />
  {isModified && <span class:list={['text-sm', { 'sm:text-base': size === 'lg' }]}>Updated:</span>}
  <time
    class:list={['text-sm', { 'sm:text-base': size === 'lg' }]}
    datetime={datetime.toString()}>{date}</time
  >
</div>
